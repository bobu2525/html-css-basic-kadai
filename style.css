/*課題の参考
以下の章を参考にして課題に取り組みましょう。

20章 CSSの疑似要素を理解しよう：疑似要素::beforeや::first-letterについて
21章 CSSの疑似クラスを理解しよう：疑似クラスや、について
22章 CSSを使ったレスポンシブデザインを理解しよう：レスポンシブデザインについて
23章 CSSのFlexboxを理解しよう：Flexboxについて*/

/* 以下の設定では、画面幅が768px以下の時に以下のスタイルが適用されます。 */
@media screen and (max-width: 768px) {
  h2 {
    font-size: 30px;
  }
  p {
    font-size: 25px;
  }
  
  #parent {
    display: flex;
    flex-direction: column; /* アイテムを縦方向に配置 */
    align-items: center; /* 水平方向の中央揃え */
  }
}



/* h1, p, bodyのデフォルトマージンを0にリセット,共通設定。 */
h1, p, body {
  margin: 0;
}

/* pタグとaタグ（リンク）のフォントサイズを統一して20pxに設定 */
p, a {
  font-size: 20px;
}
/* headerセクションのスタイリング。背景色を赤系（rgb(244, 79,79)）に設定し、テキストを中央寄せに。下の余白を20pxにしてレイアウトの余白を調整 */
header {
  background-color:rgb(244, 79,79) ;
  text-align: center;
  margin-bottom: 20px;
}
/* h1タグを白色を設定*/
h1 {
  color: rgb(255, 255, 255);
}

main {
  margin: 10px;
  display: flex;
}
/* id名parentの要素をFlexコンテナに設定 */
#parent  {
  display: flex; /* Flexコンテナにする */
  justify-content: space-between;
}


/* Flexアイテムのスタイル設定 */
.content {
  border: 3px solid rgb(238, 204, 204); /* 境界線のスタイル */
  padding: 10px 15px;
  margin: 20px 0px;
  text-align: center;
  flex-basis: 25%; /* Flexアイテムの基本サイズをコンテナの25%に設定 */
  flex-grow: 1; /* コンテナ内の余剰スペースに対して、アイテムが均等に伸びるようにする */
}

h2::after {
  content: ●;
  color:rgb(236, 122, 122)
  
}

.two::first-letter {
  font-weight: bold; /* 太字にする */
  color: rgb(97, 206, 248); /* 文字色を指定 */
}


img {
  margin: 10px 0;
  width: 70%;
} 

footer {
  background-color: rgb(244, 79, 79); /* 背景色の設定 */
  display: flex; /* フレックスボックスを使用 */
  
  /* 水平方向の中央揃え */
  align-items: center; 
  /* 垂直方向の中央揃え */
  justify-content: center; 
  /* テキストを中央揃えに */
  text-align: center; 

}

a:link {
  color:rgb(255, 255, 255);
}
a:visited {
  color: rgb(193, 234, 251);
}
a:hover {
  color: rgb(245, 178, 168);
}